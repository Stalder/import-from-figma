import { Color } from 'figma-js'
import { camelCase } from 'change-case';

import { saveColors } from './resource'

type ColorData = {
  name: string
  color: Color
  opacity: number
}

const OPACITY_PRECISION = 3

function formatHex(rgbValue: number) {
  return rgbValue.toString(16).padStart(2, '0').toLocaleUpperCase()
}

function formatColor(color: Color, opacity: number) {
  const r = Math.round(color.r * 255)
  const g = Math.round(color.g * 255)
  const b = Math.round(color.b * 255)
  const precision = 10 ** OPACITY_PRECISION

  const dartColor = `Color(${`0xFF${formatHex(r)}${formatHex(g)}${formatHex(b)}`})`

  if (typeof opacity == 'number') {
    return `${dartColor}.withOpacity(${Math.round(opacity * precision) / precision})`
  }
  return dartColor
}

function parseColorName(fullName: string) {
  return camelCase(fullName.replace(/[ -/%()+#,".]+/g, ''))
}

async function writeColors(colors: ColorData[]) {
  const colorsProps = colors
    .map((fill) => {
      const name = parseColorName(fill.name)
      return `  static Color get ${name} => const ${formatColor(fill.color, fill.opacity)};`
    })
    .join('\n\t')

  const colorsContent = `// Generated by import-from-figma. Do not modify by hand

import 'dart:ui';

class FigmaColors {
${colorsProps}
}
`
  saveColors('figma_colors', colorsContent);
}

export { writeColors }
